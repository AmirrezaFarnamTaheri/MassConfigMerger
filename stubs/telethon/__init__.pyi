from typing import Any, Awaitable, Callable, Coroutine

class TelegramClient:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    async def start(self, *args: Any, **kwargs: Any) -> "TelegramClient": ...
    async def run_until_disconnected(self) -> None: ...
    async def connect(self) -> None: ...
    async def disconnect(self) -> None: ...
    def on(self, event: Any) -> Callable[[Callable[..., Awaitable[Any]]], Any]: ...
    def iter_messages(self, *args: Any, **kwargs: Any) -> Any: ...

from . import events, errors
