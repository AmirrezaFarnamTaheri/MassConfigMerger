Metadata-Version: 2.4
Name: configstream
Version: 1.0.0
Summary: Automated VPN configuration aggregator and tester
Author: Amirreza Farnam Taheri
License: MIT
Project-URL: Homepage, https://github.com/AmirrezaFarnamTaheri/ConfigStream
Project-URL: Documentation, https://github.com/AmirrezaFarnamTaheri/ConfigStream#readme
Project-URL: Repository, https://github.com/AmirrezaFarnamTaheri/ConfigStream
Project-URL: Issues, https://github.com/AmirrezaFarnamTaheri/ConfigStream/issues
Keywords: vpn,v2ray,clash,proxy,configuration
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.31.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: pydantic-settings>=2.0.0
Requires-Dist: click>=8.1.0
Requires-Dist: aiohttp>=3.8.0
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Requires-Dist: types-requests>=2.31.0; extra == "dev"
Requires-Dist: types-pyyaml>=6.0.0; extra == "dev"
Dynamic: license-file

# 🚀 ConfigStream

**Automated Free VPN Configuration Aggregator**

ConfigStream is an automated system that collects, tests, and publishes working VPN configurations from various free sources. All configurations are automatically updated every 2 hours via GitHub Actions.

[![Generate Configurations](https://github.com/AmirrezaFarnamTaheri/ConfigStream/actions/workflows/generate-configs.yml/badge.svg)](https://github.com/AmirrezaFarnamTaheri/ConfigStream/actions/workflows/generate-configs.yml)

## 🌐 Get Fresh Configurations

Visit our GitHub Pages site to download the latest tested configurations:

**👉 [https://amirrezafarnamtaheri.github.io/ConfigStream/](https://amirrezafarnamtaheri.github.io/ConfigStream/)**

## 📥 Available Formats

- **base64.txt** - Universal Base64 encoded format
- **clash.yaml** - Clash configuration file
- **report.csv** - Detailed performance metrics

## ✨ Features

- ✅ **Automatic Updates** - Fresh configurations every 2 hours
- ✅ **Performance Testing** - All configs tested before publishing
- ✅ **Multiple Formats** - Support for various VPN clients
- ✅ **Detailed Metrics** - Performance reports included
- ✅ **Open Source** - Fully transparent and auditable

## 🔧 How It Works

1. **GitHub Actions Workflow** runs every 2 hours
2. **Fetches** VPN configurations from multiple sources
3. **Tests** each configuration for:
   - Connection stability
   - Response time
   - Reliability
4. **Generates** output files in multiple formats
5. **Commits** updated configurations automatically
6. **Publishes** to GitHub Pages for easy access

## 💻 Local Development

### Prerequisites

- Python 3.9 or higher
- pip

### Installation

```bash
# Clone the repository
git clone https://github.com/AmirrezaFarnamTaheri/ConfigStream.git
cd ConfigStream

# Install in development mode
pip install -e ".[dev]"
```

### Usage

```bash
# Generate all configurations
configstream full

# Fetch configurations only
configstream fetch

# Test existing configurations
configstream test

# Generate output files
configstream generate

# Show help
configstream --help
```

## 📁 Project Structure

```
ConfigStream/
├── .github/
│   └── workflows/
│       └── generate-configs.yml    # Automated workflow
├── src/
│   └── configstream/
│       ├── cli.py                  # Command-line interface
│       ├── fetcher.py              # Configuration fetcher
│       ├── tester.py               # Performance tester
│       ├── generator.py            # Output generator
│       └── config.py               # Configuration management
├── tests/                          # Test suite
├── output/                         # Generated configurations
├── index.html                      # GitHub Pages landing page
├── pyproject.toml                  # Project configuration
└── README.md                       # This file
```

## 🛠️ Configuration

Create a `.env` file or set environment variables:

```env
# Sources to fetch from (comma-separated URLs)
CONFIG_SOURCES=https://example.com/configs.txt,https://another.com/vpn.yaml

# Testing parameters
TEST_TIMEOUT=5
TEST_MAX_WORKERS=10

# Output directory
OUTPUT_DIR=output
```

## 🧪 Testing

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=configstream

# Run specific test file
pytest tests/test_fetcher.py
```

## 📊 Output Files

### base64.txt
Universal format containing Base64 encoded configurations. Compatible with most VPN clients.

### clash.yaml
Ready-to-use Clash configuration file with all proxies pre-configured.

### report.csv
Detailed CSV report with performance metrics for each configuration:
- Protocol type
- Server location
- Response time
- Success rate
- Timestamp

## 🤝 Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## ⚠️ Disclaimer

This project is for educational purposes only. Users are responsible for complying with their local laws and regulations regarding VPN usage. The authors assume no liability for misuse of this tool.

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- Thanks to all the free VPN providers
- Built with Python and GitHub Actions
- Powered by open source

## 📞 Support

- 🐛 [Report a Bug](https://github.com/AmirrezaFarnamTaheri/ConfigStream/issues)
- 💡 [Request a Feature](https://github.com/AmirrezaFarnamTaheri/ConfigStream/issues)
- ⭐ Star this repository if you find it useful!

---

Made with ❤️ by the ConfigStream Team
