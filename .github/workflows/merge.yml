name: Merge and Retest VPN Subscriptions

on:
  schedule:
    - cron: '0 */3 * * *'  # Run merge every 3 hours
    - cron: '*/30 * * * *' # Run retest every 30 minutes
  workflow_dispatch:
  push:
    paths:
      - 'sources.txt'
      - '.github/workflows/merge.yml'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  merge-configs:
    if: github.event.schedule == '0 */3 * * *' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y geoip-bin geoipupdate

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Create output directory
        run: mkdir -p output

      - name: Run merge pipeline
        run: |
          configstream merge \
            --sources sources.txt \
            --output output/ \
            --max-workers 20 \
            --timeout 10
        continue-on-error: false

      - name: Generate metadata with cache-busting
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          CACHE_BUST=$(date +%s)

          cat > output/metadata.json << EOF
          {
            "generated_at": "$TIMESTAMP",
            "cache_bust": "$CACHE_BUST",
            "version": "1.0.0"
          }
          EOF

          echo "$TIMESTAMP" > output/LAST_UPDATE.txt

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add output/

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Update configs - $TIMESTAMP [skip ci]"
            git push
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: vpn-configs
          path: output/

  retest-configs:
    if: github.event.schedule == '*/30 * * * *'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: vpn-configs
          path: output/

      - name: Run retest
        run: |
          configstream retest